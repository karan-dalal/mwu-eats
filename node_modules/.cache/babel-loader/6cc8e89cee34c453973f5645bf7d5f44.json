{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport fetch from 'cross-fetch';\n\nconst _getErrorMessage = err => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\n\nconst handleError = (error, reject) => {\n  if (typeof error.json !== 'function') {\n    return reject(error);\n  }\n\n  error.json().then(err => {\n    return reject({\n      message: _getErrorMessage(err),\n      status: (error === null || error === void 0 ? void 0 : error.status) || 500\n    });\n  });\n};\n\nconst _getRequestParams = (method, options, parameters, body) => {\n  const params = {\n    method,\n    headers: (options === null || options === void 0 ? void 0 : options.headers) || {}\n  };\n\n  if (method === 'GET') {\n    return params;\n  }\n\n  params.headers = Object.assign({\n    'Content-Type': 'application/json'\n  }, options === null || options === void 0 ? void 0 : options.headers);\n  params.body = JSON.stringify(body);\n  return Object.assign(Object.assign({}, params), parameters);\n};\n\nfunction _handleRequest(method, url, options, parameters, body) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n      fetch(url, _getRequestParams(method, options, parameters, body)).then(result => {\n        if (!result.ok) throw result;\n        if (options === null || options === void 0 ? void 0 : options.noResolveJson) return resolve(result);\n        return result.json();\n      }).then(data => resolve(data)).catch(error => handleError(error, reject));\n    });\n  });\n}\n\nexport function get(url, options, parameters) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest('GET', url, options, parameters);\n  });\n}\nexport function post(url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest('POST', url, options, parameters, body);\n  });\n}\nexport function put(url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest('PUT', url, options, parameters, body);\n  });\n}\nexport function remove(url, body, options, parameters) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return _handleRequest('DELETE', url, options, parameters, body);\n  });\n}","map":{"version":3,"sources":["../../../src/lib/fetch.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetch(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('GET', url, options, parameters);\n    });\n}\nexport function post(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('POST', url, options, parameters, body);\n    });\n}\nexport function put(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('PUT', url, options, parameters, body);\n    });\n}\nexport function remove(url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest('DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map"]},"metadata":{},"sourceType":"module"}