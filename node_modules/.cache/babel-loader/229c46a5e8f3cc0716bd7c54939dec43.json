{"ast":null,"code":"import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n  constructor(url, {\n    headers = {},\n    schema\n  } = {}) {\n    super({});\n    this.url = new URL(url);\n    this.headers = Object.assign({}, headers);\n    this.schema = schema;\n  }\n  /**\n   * Perform a function call.\n   */\n\n\n  rpc(params, {\n    head = false,\n    count = null\n  } = {}) {\n    if (head) {\n      this.method = 'HEAD';\n\n      if (params) {\n        Object.entries(params).forEach(([name, value]) => {\n          this.url.searchParams.append(name, value);\n        });\n      }\n    } else {\n      this.method = 'POST';\n      this.body = params;\n    }\n\n    if (count) {\n      if (this.headers['Prefer'] !== undefined) this.headers['Prefer'] += `,count=${count}`;else this.headers['Prefer'] = `count=${count}`;\n    }\n\n    return new PostgrestFilterBuilder(this);\n  }\n\n}","map":{"version":3,"sources":["../../../src/lib/PostgrestRpcBuilder.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,SAAjC;AACA,OAAO,sBAAP,MAAmC,0BAAnC;AAEA,eAAc,MAAO,mBAAP,SAAsC,gBAAtC,CAAyD;AACrE,EAAA,WAAA,CACE,GADF,EAEE;AAAE,IAAA,OAAO,GAAG,EAAZ;AAAgB,IAAA;AAAhB,MAAqF,EAFvF,EAEyF;AAEvF,UAAM,EAAN;AACA,SAAK,GAAL,GAAW,IAAI,GAAJ,CAAQ,GAAR,CAAX;AACA,SAAK,OAAL,GAAY,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,OAAR,CAAZ;AACA,SAAK,MAAL,GAAc,MAAd;AACD;AAED;;AAEG;;;AACH,EAAA,GAAG,CACD,MADC,EAED;AACE,IAAA,IAAI,GAAG,KADT;AAEE,IAAA,KAAK,GAAG;AAFV,MAMI,EARH,EAQK;AAEN,QAAI,IAAJ,EAAU;AACR,WAAK,MAAL,GAAc,MAAd;;AAEA,UAAI,MAAJ,EAAY;AACV,QAAA,MAAM,CAAC,OAAP,CAAe,MAAf,EAAuB,OAAvB,CAA+B,CAAC,CAAC,IAAD,EAAO,KAAP,CAAD,KAAkB;AAC/C,eAAK,GAAL,CAAS,YAAT,CAAsB,MAAtB,CAA6B,IAA7B,EAAmC,KAAnC;AACD,SAFD;AAGD;AACF,KARD,MAQO;AACL,WAAK,MAAL,GAAc,MAAd;AACA,WAAK,IAAL,GAAY,MAAZ;AACD;;AAED,QAAI,KAAJ,EAAW;AACT,UAAI,KAAK,OAAL,CAAa,QAAb,MAA2B,SAA/B,EAA0C,KAAK,OAAL,CAAa,QAAb,KAA0B,UAAU,KAAK,EAAzC,CAA1C,KACK,KAAK,OAAL,CAAa,QAAb,IAAyB,SAAS,KAAK,EAAvC;AACN;;AAED,WAAO,IAAI,sBAAJ,CAA2B,IAA3B,CAAP;AACD;;AA3CoE","sourceRoot":"","sourcesContent":["import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema } = {}) {\n        super({});\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map"]},"metadata":{},"sourceType":"module"}