{"ast":null,"code":"import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n  constructor(url, headers = {}) {\n    super(url, headers);\n  }\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n\n\n  from(id) {\n    return new StorageFileApi(this.url, this.headers, id);\n  }\n\n}","map":{"version":3,"sources":["../../src/SupabaseStorageClient.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,EAA2B,cAA3B,QAAiD,OAAjD;AAEA,OAAM,MAAO,qBAAP,SAAqC,gBAArC,CAAqD;AACzD,EAAA,WAAA,CAAY,GAAZ,EAAyB,OAAA,GAAqC,EAA9D,EAAgE;AAC9D,UAAM,GAAN,EAAW,OAAX;AACD;AAED;;;;AAIG;;;AACH,EAAA,IAAI,CAAC,EAAD,EAAW;AACb,WAAO,IAAI,cAAJ,CAAmB,KAAK,GAAxB,EAA6B,KAAK,OAAlC,EAA2C,EAA3C,CAAP;AACD;;AAZwD","sourceRoot":"","sourcesContent":["import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}) {\n        super(url, headers);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map"]},"metadata":{},"sourceType":"module"}